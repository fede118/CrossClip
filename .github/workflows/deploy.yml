name: Build and Deploy

on:
  push:
    branches:
      - master # Or your deployment branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add other setup steps like setting up Node.js, caching, etc.
      # e.g., actions/setup-node@v3

      - name: Create Firebase Config from Secrets
        run: |
          # Create the directory if it doesn't exist (adjust path as needed)
          mkdir -p composeApp/src/wasmJsMain/resources 

          # Take the template and replace placeholders with secrets
          # Adjust the paths to your template and output file
          sed -e "s|__FIREBASE_API_KEY__|${{ secrets.FIREBASE_API_KEY }}|g" \
              -e "s|__FIREBASE_AUTH_DOMAIN__|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g" \
              -e "s|__FIREBASE_PROJECT_ID__|${{ secrets.FIREBASE_PROJECT_ID }}|g" \
              -e "s|__FIREBASE_STORAGE_BUCKET__|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g" \
              -e "s|__FIREBASE_MESSAGING_SENDER_ID__|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g" \
              -e "s|__FIREBASE_APP_ID__|${{ secrets.FIREBASE_APP_ID }}|g" \
              -e "s|__FIREBASE_MEASUREMENT_ID__|${{ secrets.FIREBASE_MEASUREMENT_ID }}|g" \
              composeApp/src/wasmJsMain/resources/firebase-config.template.js > composeApp/src/wasmJsMain/resources/firebase-config.js
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      # Your build step (e.g., npm run build, ./gradlew wasmJsBrowserDistribution)
      # This step should use the newly created firebase-config.js
      - name: Build Web App
        run: |
          # Example for a Kotlin/Wasm project
          ./gradlew wasmJsBrowserDistribution 
          # Or for a Node.js project:
          # npm install
          # npm run build
      - name: "ðŸ“¤ Upload GitHub Pages artifact"
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./composeApp/build/dist/wasmJs/productionExecutable

      - name: "ðŸš€ Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v4

